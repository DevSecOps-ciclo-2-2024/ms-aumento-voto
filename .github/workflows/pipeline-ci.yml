name: CI

on:
  push:
  workflow_dispatch:

jobs:
  
  Build:
    
    runs-on: ubuntu-latest

    steps:
    
      - name: Clonacion de codigo
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '8'
          distribution: 'temurin'
      
      - name: Compilacion
        run: |
          #mvn package
          echo "build"
      - name: Ejecucion Test Unitarios
        run: |
          #mvn package test
          echo "Unit test"
  
  SCA:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    
      - name: SCA Analysis
        run: |
          echo "SCA"
  
  SAST:
    needs: Build
    runs-on: ubuntu-latest

    steps:   
    
      - name: Clonacion de codigo
        uses: actions/checkout@v4
      
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Analisis SonarCloud
        run: |
          echo "SAST"
          #mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
          #-Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          #-Dsonar.host.url=https://sonarcloud.io \
          #-Dsonar.organization=devops-foundation-ciclo1-usach2024 \
          #-Dsonar.projectKey=devops-foundation-ciclo1-usach2024_ms-aumento-voto

      #- name: SonarQube Quality Gate Check
         #env:
           #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL
        #uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        #with:
          #scanMetadataReportFile: target/sonar/report-task.txt
          
  Docker-build:
    needs: 
    - SAST
    - SCA
    runs-on: ubuntu-latest

    steps:
    
      - name: Docker Login
        run: |
          echo "Docker login"
        #uses: docker/login-action@v3.1.0
        #with:
          #username: clagosu
          #password: ${{ secrets.DOCKER_PASS }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      
      - name: Docker build
        run: | 
          #docker build -t clagosu/ms-aumento-voto:latest .
          echo "Docker build"

  Image-Vulnerability-Analysis:
    needs: Docker-build
    
    runs-on: ubuntu-latest

    steps:
    
      - name: Image Analysis
        run: |
          echo "Image Analysis"

  Docker-push:
    needs: 
      - Image-Vulnerability-Analysis
      
    runs-on: ubuntu-latest

    steps:
    
      - name: Docker push
        run: |
          echo "Docker push"
  
  Deploy:
    needs: Docker-push
    runs-on: self-hosted

    steps:

      - name: Clonacion de codigo
        uses: actions/checkout@v4
      
      - name: Despliegue
        run: |
          echo "Despliegue"
          #kubectl apply -f deploy.yaml
  DAST:
    needs: Deploy
    runs-on: ubuntu-latest

    steps:

      - name: Clonacion de codigo
        uses: actions/checkout@v4
      - name: Despliegue
        run: |
          echo "Despliegue"
          #kubectl apply -f deploy.yaml
